{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap b34fbe4c8e200f364827","webpack:///src/index.ts","webpack:///src/loading-bar.module.ts","webpack:/external \"@angular/core\"","webpack:/external \"@angular/http\"","webpack:///src/loading-bar.http.ts","webpack:/external \"rxjs/Subject\"","webpack:/external \"rxjs/add/operator/share\"","webpack:///src/loading-bar.component.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","installedModules","__webpack_require__","moduleId","id","loaded","modules","call","m","c","p","loading_bar_module_1","NgLoadingBarModule","loading_bar_http_1","NgLoadingBarHttp","loading_bar_component_1","NgLoadingBarComponent","core_1","http_1","httpFactory","xhrBackend","requestOptions","NgLoadingBarModule_1","forRoot","ngModule","providers","provide","Http","useFactory","deps","XHRBackend","RequestOptions","__decorate","NgModule","declarations","imports","HttpModule","Subject_1","_super","__extends","_this","apply","arguments","pending","Subject","_pendingRequests","prototype","request","url","options","response","share","ignoreLoadingBar","requestStarted","subscribe","x","err","requestEnded","next","started","pendingRequests","completed","Injectable","_renderer","http","includeSpinner","_autoIncrement","_includeBar","_latencyThreshold","_startSize","_started","_status","progress","start","complete","ngAfterViewInit","hide","_loadingBarContainer","_spinner","_startTimeout","setTimeout","clearTimeout","_completeTimeout","show","set","n","pct","setElementStyle","_loadingBar","_incTimeout","inc","rnd","stat","Math","random","el","styleName","styleValue","nativeElement","ViewChild","Input","Component","selector","template","__param","Inject","Renderer"],"mappings":"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","file":"bundles/ng-loading-bar.umd.min.js","sourceRoot":"","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/share\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/http\", \"rxjs/Subject\", \"rxjs/add/operator/share\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-loading-bar\"] = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/share\"));\n\telse\n\t\troot[\"ng-loading-bar\"] = factory(root[\"@angular/core\"], root[\"@angular/http\"], root[\"rxjs/Subject\"], root[\"rxjs/add/operator/share\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b34fbe4c8e200f364827","import { NgLoadingBarModule } from './loading-bar.module';\nimport { NgLoadingBarHttp } from './loading-bar.http';\nimport { NgLoadingBarComponent } from './loading-bar.component';\n\nexport {\n    NgLoadingBarModule,\n    NgLoadingBarHttp,\n    NgLoadingBarComponent,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { NgLoadingBarHttp } from './loading-bar.http';\nimport { NgLoadingBarComponent } from './loading-bar.component';\n\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n    return new NgLoadingBarHttp(xhrBackend, requestOptions);\n}\n\n@NgModule({\n    declarations: [\n        NgLoadingBarComponent,\n    ],\n    imports: [\n        HttpModule,\n    ],\n    exports: [\n        NgLoadingBarComponent,\n    ],\n})\nexport class NgLoadingBarModule {\n    static forRoot(): ModuleWithProviders {\n      return {\n        ngModule: NgLoadingBarModule,\n        providers: [\n            { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n        ],\n      };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loading-bar.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/http\"\n// module id = 3\n// module chunks = 0","import { Injector } from '@angular/core';\nimport { Http, Request, Response, RequestOptionsArgs } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/share';\n\nexport interface LoadingBarRequestOptionsArgs extends RequestOptionsArgs {\n    ignoreLoadingBar?: boolean;\n}\n\n@Injectable()\nexport class NgLoadingBarHttp extends Http {\n    pending = new Subject();\n    private _pendingRequests: number = 0;\n\n    request(url: string|Request, options?: LoadingBarRequestOptionsArgs): Observable<Response> {\n        const response = super.request(url, options).share();\n        if (options && options.ignoreLoadingBar === true) {\n            return response;\n        }\n\n        this.requestStarted();\n        response.subscribe(\n            (x) => {},\n            (err) => this.requestEnded(),\n            () => this.requestEnded(),\n        );\n\n        return response;\n    }\n\n    private requestStarted() {\n        this.pending.next({\n            started: this._pendingRequests === 0,\n            pendingRequests: ++this._pendingRequests,\n        });\n    }\n\n    private requestEnded() {\n        this.pending.next({\n            completed: this._pendingRequests === 1,\n            pendingRequests: --this._pendingRequests,\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loading-bar.http.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Subject\"\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/share\"\n// module id = 6\n// module chunks = 0","import { Inject, Component, ViewChild, Renderer, AfterViewInit, Input } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { NgLoadingBarHttp } from './loading-bar.http';\n\n@Component({\n    selector: 'ng-loading-bar',\n    template: `\n        <div id=\"loading-bar-spinner\" #loadingBarSpinner><div class=\"spinner-icon\"></div></div>\n        <div id=\"loading-bar\" #loadingBarContainer><div class=\"bar\" #loadingBar><div class=\"peg\"></div></div></div>\n    `,\n})\nexport class NgLoadingBarComponent implements AfterViewInit {\n    @ViewChild('loadingBarSpinner') _spinner: any;\n    @ViewChild('loadingBarContainer') _loadingBarContainer: any;\n    @ViewChild('loadingBar') _loadingBar: any;\n\n    @Input() includeSpinner: boolean = true;\n\n    private _autoIncrement: boolean = true;\n    private _includeBar: boolean = true;\n    private _latencyThreshold: number = 10;\n    private _startSize: number = 0.02;\n\n    private _started: boolean = false;\n    private _status: number = 0;\n\n    private _incTimeout: any;\n    private _completeTimeout: any;\n\n    private _startTimeout: any;\n\n    constructor(private _renderer: Renderer, @Inject(Http) http: NgLoadingBarHttp) {\n        if (http instanceof NgLoadingBarHttp) {\n            http.pending.subscribe((progress: any) => {\n                if (progress.started) this.start();\n                if (progress.completed) this.complete();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        this.hide(this._loadingBarContainer);\n        this.hide(this._spinner);\n    }\n\n    /**\n     * Inserts the loading bar element into the dom, and sets it to 2%\n     */\n    private start(): void {\n        this._startTimeout = setTimeout(() => {\n\n            clearTimeout(this._completeTimeout);\n\n            // do not continually broadcast the started event:\n            if (this._started) { return; }\n\n            this._started = true;\n            this._status = 0;\n\n            if (this._includeBar) {\n                this.show(this._loadingBarContainer);\n            }\n\n            if (this.includeSpinner) {\n                this.show(this._spinner);\n            }\n\n            this.set(this._startSize);\n        }, this._latencyThreshold);\n    }\n    /**\n     * Set the loading bar's width to a certain percent.\n     *\n     * @param n any value between 0 and 1\n     */\n    private set(n): void {\n        if (!this._started) { return; }\n        const pct = (n * 100) + '%';\n        this.setElementStyle(this._loadingBar, 'width', pct);\n        this._status = n;\n\n        // increment loadingbar to give the illusion that there is always\n        // progress but make sure to cancel the previous timeouts so we don't\n        // have multiple incs running at the same time.\n        if (this._autoIncrement) {\n            clearTimeout(this._incTimeout);\n            this._incTimeout = setTimeout(() => {\n                this.inc();\n            }, 250);\n        }\n    }\n\n    private complete(): void {\n        setTimeout(() => {\n            this.set(1);\n\n            clearTimeout(this._completeTimeout);\n            clearTimeout(this._startTimeout);\n\n            // Attempt to aggregate any start/complete calls within 500ms:\n            this._completeTimeout = setTimeout(() => {\n                this._started = false;\n                this.hide(this._loadingBarContainer);\n                this.hide(this._spinner);\n            }, 500);\n        }, this._latencyThreshold);\n    }\n\n    /**\n     * Increments the loading bar by a random amount\n     * but slows down as it progresses\n     */\n    private inc(): void {\n        if (this._status >= 1) {\n            return;\n        }\n\n        let rnd = 0;\n        let stat = this._status;\n        if (stat >= 0 && stat < 0.25) {\n            // Start out between 3 - 6% increments\n            rnd = (Math.random() * (5 - 3 + 1) + 3) / 100;\n        } else if (stat >= 0.25 && stat < 0.65) {\n            // increment between 0 - 3%\n            rnd = (Math.random() * 3) / 100;\n        } else if (stat >= 0.65 && stat < 0.9) {\n            // increment between 0 - 2%\n            rnd = (Math.random() * 2) / 100;\n        } else if (stat >= 0.9 && stat < 0.99) {\n            // finally, increment it .5 %\n            rnd = 0.005;\n        } else {\n            // after 99%, don't increment:\n            rnd = 0;\n        }\n\n        let pct = this._status + rnd;\n        this.set(pct);\n    }\n\n    private show(el: any): void {\n        this.setElementStyle(el, 'display', 'block');\n    }\n    private hide(el: any): void {\n        this.setElementStyle(el, 'display', 'none');\n    }\n    private setElementStyle(el: any, styleName: string, styleValue: string): void {\n        this._renderer.setElementStyle(el.nativeElement, styleName, styleValue);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loading-bar.component.ts"]}