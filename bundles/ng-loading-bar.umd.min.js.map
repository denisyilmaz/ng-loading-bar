{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 330456810215054c1bcd","webpack:///src/index.ts","webpack:///src/loading-bar.module.ts","webpack:/external \"@angular/core\"","webpack:/external \"@angular/http\"","webpack:///src/loading-bar.http.ts","webpack:/external \"rxjs/Subject\"","webpack:/external \"rxjs/add/operator/share\"","webpack:///src/loading-bar.component.ts","webpack:/external \"@angular/animations\""],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_8__","installedModules","__webpack_require__","moduleId","id","loaded","modules","call","m","c","p","loading_bar_module_1","NgLoadingBarModule","loading_bar_http_1","NgLoadingBarHttp","loading_bar_component_1","NgLoadingBarComponent","core_1","http_1","httpFactory","xhrBackend","requestOptions","NgLoadingBarModule_1","forRoot","ngModule","providers","provide","Http","useFactory","deps","XHRBackend","RequestOptions","__decorate","NgModule","declarations","imports","HttpModule","Subject_1","_super","__extends","_this","apply","arguments","pending","Subject","_pendingRequests","prototype","request","url","options","response","share","ignoreLoadingBar","requestStarted","subscribe","x","err","requestEnded","next","started","pendingRequests","completed","Injectable","animations_1","_renderer","http","includeSpinner","_autoIncrement","_includeBar","_latencyThreshold","_startSize","_started","_status","state","width","progress","start","complete","ngAfterViewInit","hide","_startTimeout","setTimeout","clearTimeout","_completeTimeout","show","set","n","pct","_incTimeout","inc","rnd","stat","Math","random","ViewChild","Input","Component","selector","template","animations","trigger","style","opacity","transition","animate","__param","Inject","Renderer"],"mappings":"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","file":"bundles/ng-loading-bar.umd.min.js","sourceRoot":"","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/share\"), require(\"@angular/animations\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/http\", \"rxjs/Subject\", \"rxjs/add/operator/share\", \"@angular/animations\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-loading-bar\"] = factory(require(\"@angular/core\"), require(\"@angular/http\"), require(\"rxjs/Subject\"), require(\"rxjs/add/operator/share\"), require(\"@angular/animations\"));\n\telse\n\t\troot[\"ng-loading-bar\"] = factory(root[\"@angular/core\"], root[\"@angular/http\"], root[\"rxjs/Subject\"], root[\"rxjs/add/operator/share\"], root[\"@angular/animations\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 330456810215054c1bcd","import { NgLoadingBarModule } from './loading-bar.module';\nimport { NgLoadingBarHttp } from './loading-bar.http';\nimport { NgLoadingBarComponent } from './loading-bar.component';\n\nexport {\n    NgLoadingBarModule,\n    NgLoadingBarHttp,\n    NgLoadingBarComponent,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { NgLoadingBarHttp } from './loading-bar.http';\nimport { NgLoadingBarComponent } from './loading-bar.component';\n\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n    return new NgLoadingBarHttp(xhrBackend, requestOptions);\n}\n\n@NgModule({\n    declarations: [\n        NgLoadingBarComponent,\n    ],\n    imports: [\n        HttpModule,\n    ],\n    exports: [\n        NgLoadingBarComponent,\n    ],\n})\nexport class NgLoadingBarModule {\n    static forRoot(): ModuleWithProviders {\n      return {\n        ngModule: NgLoadingBarModule,\n        providers: [\n            { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n        ],\n      };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loading-bar.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/http\"\n// module id = 3\n// module chunks = 0","import { Injector } from '@angular/core';\nimport { Http, Request, Response, RequestOptionsArgs } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/share';\n\nexport interface LoadingBarRequestOptionsArgs extends RequestOptionsArgs {\n    ignoreLoadingBar?: boolean;\n}\n\n@Injectable()\nexport class NgLoadingBarHttp extends Http {\n    pending = new Subject();\n    private _pendingRequests: number = 0;\n\n    request(url: string|Request, options?: LoadingBarRequestOptionsArgs): Observable<Response> {\n        const response = super.request(url, options).share();\n        if (options && options.ignoreLoadingBar === true) {\n            return response;\n        }\n\n        this.requestStarted();\n        response.subscribe(\n            (x) => {},\n            (err) => this.requestEnded(),\n            () => this.requestEnded(),\n        );\n\n        return response;\n    }\n\n    private requestStarted() {\n        this.pending.next({\n            started: this._pendingRequests === 0,\n            pendingRequests: ++this._pendingRequests,\n        });\n    }\n\n    private requestEnded() {\n        this.pending.next({\n            completed: this._pendingRequests === 1,\n            pendingRequests: --this._pendingRequests,\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loading-bar.http.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Subject\"\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/share\"\n// module id = 6\n// module chunks = 0","import { Inject, Component, ViewChild, Renderer, AfterViewInit, Input } from '@angular/core';\nimport {trigger, state, animate, style, transition} from '@angular/animations';\nimport { Http } from '@angular/http';\nimport { NgLoadingBarHttp } from './loading-bar.http';\n\n@Component({\n    selector: 'ng-loading-bar',\n    template: `\n        <div id=\"loading-bar-spinner\" #loadingBarSpinner [@fadeInOut]=\"state\"><div class=\"spinner-icon\"></div></div>\n        <div id=\"loading-bar\" #loadingBarContainer [@fadeInOut]=\"state\"><div class=\"bar\" #loadingBar [style.width]=\"width\"></div></div>\n    `,\n    animations: [\n        trigger('fadeInOut', [\n            state('void', style({opacity: 0}) ),\n            state('true', style({opacity: 1}) ),\n            state('false', style({opacity: 0}) ),\n            transition('0 <=> 1', animate('0.35s linear')),\n            transition('* <=> void', animate('0.35s linear'))\n        ])\n    ]\n})\nexport class NgLoadingBarComponent implements AfterViewInit {\n    @ViewChild('loadingBarSpinner') _spinner: any;\n    @ViewChild('loadingBarContainer') _loadingBarContainer: any;\n    @ViewChild('loadingBar') _loadingBar: any;\n\n    @Input() includeSpinner: boolean = true;\n\n    private _autoIncrement: boolean = true;\n    private _includeBar: boolean = true;\n    private _latencyThreshold: number = 10;\n    private _startSize: number = 0.02;\n\n    private _started: boolean = false;\n    private _status: number = 0;\n\n    private state:boolean = false; \n    private width:string = '0%';\n\n    private _incTimeout: any;\n    private _completeTimeout: any;\n\n    private _startTimeout: any;\n\n    constructor(private _renderer: Renderer, @Inject(Http) http: NgLoadingBarHttp) {\n        if (http instanceof NgLoadingBarHttp) {\n            http.pending.subscribe((progress: any) => {\n                if (progress.started) this.start();\n                if (progress.completed) this.complete();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        this.hide();\n    }\n\n    /**\n     * Inserts the loading bar element into the dom, and sets it to 2%\n     */\n    private start(): void {\n        this._startTimeout = setTimeout(() => {\n\n            clearTimeout(this._completeTimeout);\n\n            // do not continually broadcast the started event:\n            if (this._started) { return; }\n\n            this._started = true;\n            this._status = 0;\n\n            if (this._includeBar || this.includeSpinner) {\n                this.show();\n            }\n\n            this.set(this._startSize);\n        }, this._latencyThreshold);\n    }\n    /**\n     * Set the loading bar's width to a certain percent.\n     *\n     * @param n any value between 0 and 1\n     */\n    private set(n): void {\n        if (!this._started) { return; }\n        const pct = (n * 100) + '%';\n        this.width = pct;\n        this._status = n;\n\n        // increment loadingbar to give the illusion that there is always\n        // progress but make sure to cancel the previous timeouts so we don't\n        // have multiple incs running at the same time.\n        if (this._autoIncrement) {\n            clearTimeout(this._incTimeout);\n            this._incTimeout = setTimeout(() => {\n                this.inc();\n            }, 250);\n        }\n    }\n\n    private complete(): void {\n        setTimeout(() => {\n            this.set(1);\n\n            clearTimeout(this._completeTimeout);\n            clearTimeout(this._startTimeout);\n\n            // Attempt to aggregate any start/complete calls within 500ms:\n            this._completeTimeout = setTimeout(() => {\n                this._started = false;\n                this.hide();\n            }, 500);\n        }, this._latencyThreshold);\n    }\n\n    /**\n     * Increments the loading bar by a random amount\n     * but slows down as it progresses\n     */\n    private inc(): void {\n        if (this._status >= 1) {\n            return;\n        }\n\n        let rnd = 0;\n        let stat = this._status;\n        if (stat >= 0 && stat < 0.25) {\n            // Start out between 3 - 6% increments\n            rnd = (Math.random() * (5 - 3 + 1) + 3) / 100;\n        } else if (stat >= 0.25 && stat < 0.65) {\n            // increment between 0 - 3%\n            rnd = (Math.random() * 3) / 100;\n        } else if (stat >= 0.65 && stat < 0.9) {\n            // increment between 0 - 2%\n            rnd = (Math.random() * 2) / 100;\n        } else if (stat >= 0.9 && stat < 0.99) {\n            // finally, increment it .5 %\n            rnd = 0.005;\n        } else {\n            // after 99%, don't increment:\n            rnd = 0;\n        }\n\n        let pct = this._status + rnd;\n        this.set(pct);\n    }\n\n    private show(): void {\n        this.state = true;\n    }\n    private hide(): void {\n        this.state = false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loading-bar.component.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/animations\"\n// module id = 8\n// module chunks = 0"]}